{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","to","activeClassName","Message","props","s","message","avatar","src","alt","content","name","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","affairs","buttons","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","valid","container","value","onChange","add_button","error_text","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","key","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","console","log","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","style","display","flexDirection","justifyContent","alignItems","gap","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","opt","SuperRadio","onChangeCallback","i","arr","HW7","homeWorkReducer","action","payload","sort","b","u","age","initialPeople","HW8","people","setPeople","finalPeople","p","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ad1183b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__2_3e5\",\"buttons\":\"Affairs_buttons__72Ijl\",\"affair\":\"Affairs_affair__1Mpe6\",\"name\":\"Affairs_name__2EE72\",\"priority\":\"Affairs_priority__1ZlDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__3wYg9\",\"valid\":\"Greeting_valid__1Jf1P\",\"error\":\"Greeting_error__15B8b\",\"error_text\":\"Greeting_error_text__2UO25\",\"add_button\":\"Greeting_add_button__CyWlJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1a3MP\",\"avatar\":\"Message_avatar__3YWWE\",\"content\":\"Message_content__w_-G1\",\"time\":\"Message_time__Oy6GM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__16U4V\",\"errorInput\":\"SuperInputText_errorInput__lc4mc\",\"error\":\"SuperInputText_error__klimZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2aBq-\",\"column\":\"HW4_column__19mdy\",\"testSpanError\":\"HW4_testSpanError__3ioiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3W-Ey\",\"red\":\"SuperButton_red__1bRVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2TE9N\",\"spanClassName\":\"SuperCheckbox_spanClassName__p-Hb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aSCXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__2Z8Eh\"};","import React from 'react'\nimport './HW5.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <header className={\"header\"}>\n            <div className={\"navbar\"}>\n                <NavLink className={\"nav_link\"} to={'/pre-junior'} activeClassName={\"active_link\"}>Pre Junior</NavLink>\n                <NavLink className={\"nav_link\"} to={'/junior'} activeClassName={\"active_link\"}>Junior</NavLink>\n                <NavLink className={\"nav_link\"} to={'/junior-plus'} activeClassName={\"active_link\"}>Junior Plus</NavLink>\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={s.message}>\n            <div className={s.avatar}>\n                <img src={props.avatar} alt={\"avatar\"}/>\n            </div>\n            <div className={s.content}>\n                <h2>{props.name}</h2>\n                <p>{props.message}</p>\n                <div className={s.time}>\n                    {props.time}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Ilya (anime)',\n    message: 'Alo alo alo alo alo aloaloaloalao',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import s from './Affairs.module.css'\nimport React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div className={s.affair}>\n            <div className={s.name}>\n                {props.affair.name}\n            </div>\n            <div className={s.priority}>\n                Priority: {props.affair.priority}\n            </div>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import s from './Affairs.module.css'\nimport React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (value: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div className={s.affairs}>\n\n            {mappedAffairs}\n\n            <div className={s.buttons}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs\n    if (filter === 'low') return affairs.filter((a: AffairType) => a.priority === 'low')\n    if (filter === 'middle') return affairs.filter((a: AffairType) => a.priority === 'middle')\n    if (filter === 'high') return affairs.filter((a: AffairType) => a.priority === 'high')\n    return []\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter((a: AffairType) => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {FormEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: FormEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.valid\n\n    return (\n        <div className={s.container}>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <button className={s.add_button} onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            <span className={s.error_text}>{error}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState, FormEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: FormEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n        setError('')\n    }\n    const addUser = () => {\n        if (name) {\n            addUserCallback(name)\n            alert(`Hello ${name} !`)\n            setName('')\n        } else {\n            setError('Введите имя')\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        const newUser = {_id: v1(), name: name}\n        setUsers([...users, newUser])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={error ? finalInputClassName : s.superInput}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport s from './SuperEditableSpan.module.css'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n    console.log(onEnter)\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.span} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState('editable-span-value', 'hello'))\n    }\n\n    return (\n        <div style={{display: \"flex\",flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", gap: \"10px\"}}>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text here...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div className={\"error\"}>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div className={\"error_pic\"}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] | undefined = options?.map(opt => <option key={opt}>{opt}</option>); // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: JSX.Element[] = options ? options.map((opt, i) => (\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={value === opt && !!opt}\n                value={opt}\n                onChange={onChangeCallback}\n                {...restProps}\n            />\n            {opt}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState<string>(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import {UserType} from \"../HW8\";\n\ntype ActionsType = {\n    type: 'sort' | 'check'\n    payload: 'up' | 'down' | number\n}\n\nexport const homeWorkReducer = (state: Array<UserType>, action: ActionsType): Array<UserType> => {\n    switch (action.type) {\n        case 'sort': {\n            return action.payload === 'up'\n                ? [...state].sort((a, b) => a.name > b.name ? 1 : -1)\n                : [...state].sort((a, b) => b.name >= a.name ? 1 : -1)\n        }\n        case 'check': {\n            return state.filter(u => u.age >= action.payload)\n        }\n        default: return state\n    }\n}","import React, {useState} from 'react'\nimport {homeWorkReducer} from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\nexport type UserType = {\n    _id: number\n    name: string\n    age: number\n}\n\nconst initialPeople: Array<UserType> = [\n    {_id: 0, name: 'Кот', age: 3},\n    {_id: 1, name: 'Александр', age: 66},\n    {_id: 2, name: 'Коля', age: 16},\n    {_id: 3, name: 'Виктор', age: 44},\n    {_id: 4, name: 'Дмитрий', age: 40},\n    {_id: 5, name: 'Ирина', age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople)\n\n    const finalPeople = people.map((p: UserType) => (\n        <div key={p._id}>\n            {p.name + ' ' + p.age}\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n            {finalPeople}\n\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={check18}>check 18</SuperButton></div>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW8\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW7 />\r\n            <HW8 />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n","import React from 'react'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            Junior Plus page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n","import React from 'react'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n\n                <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}